# Bash completion (compspec) for termdub.sh.
#  vim:tw=0:ts=4:sw=4:noet:norl:ft=sh:

# The Bash manual describes command completion but it might be
# confusing (overwhelming?) to someone new to completion -- and
# in most cases, you need to do something basic and not anything
# too fancy.
#
# Resources:
#   man bash, 'natch:
#     Search for 'completion'
#     https://www.gnu.org/software/bash/manual/html_node/Programmable-Completion.html
#   Poke around existing files:
#     /usr/share/bash-completion/completions/
#     /usr/share/bash-completion/bash_completion
#     /etc/bash_completion
#     /etc/bash_completion.d
#   An Introduction to Programmable Completion:
#     http://tldp.org/LDP/abs/html/tabexpansion.html
#   Project page:
#     https://bash-completion.alioth.debian.org/
#
# Play around with compgen:
#   compgen -u
#   compgen -u r
#   compgen -u roo
#   compgen -P "hello " -u

_termdub () {

	# Completion boilerplate.
    COMPREPLY=()
	local cur prev words cword
	if command -v _init_completion > /dev/null; then
		# lsb_release -d: Linux Mint 17.1 Rebecca
		_init_completion || return
	elif command -v _get_comp_words_by_ref > /dev/null; then
		# lsb_release -d: Ubuntu 12.04 LTS
		_get_comp_words_by_ref cur prev words cword || return
	fi

	if [[ $cword -eq 1 ]]; then
		# COMPREPLY is an array storing the possible completions.
		# compgen culls the list based on $cur.
		COMPREPLY=( $( compgen -W '
					lhs
					rhs
					logs
					logc
					dbms
					mini
					minil
					minir
					bigl
					bigc
					bigr
					' -- "$cur" ) )
	fi

	if false; then
		echo
		echo "cur: $cur"
		echo "prev: $prev"
		echo "words: $words"
		echo "cword: $cword"
		echo
		echo "COMP_CWORD: ${COMP_CWORD}"
		echo "COMP_KEY: ${COMP_KEY}"
		echo "COMP_LINE: ${COMP_LINE}"
		echo "COMP_POINT: ${COMP_POINT}"
		echo "COMP_TYPE: ${COMP_TYPE}"
		echo "COMP_WORDBREAKS: ${COMP_WORDBREAKS}"
		echo "COMP_WORDS: ${COMP_WORDS}"
		echo "COMPREPLY: ${COMPREPLY}"
		echo "FIGNORE: ${FIGNORE}"
		echo
	fi

	return 0
}

complete -F _termdub termdub.py

