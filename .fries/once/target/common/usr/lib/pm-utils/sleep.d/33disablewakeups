#!/bin/bash

# File: 33disablewakeups
# Author: Landon Bouma (landonb &#x40; retrosoft &#x2E; com)
# Last Modified: 2016.09.27
# Project Page: https://github.com/landonb/home_fries
# License: GPLv3
# Summary: Smart Bash Startup Script

# For details on this file and pm-utils, see: `man pm-suspend`
#
# You can also read an ArchLinux article which seems accurate enough
# (considering that ArchLinux is not part of the Debian/Ubuntu/Mint family).
#   https://wiki.archlinux.org/index.php/Pm-utils
#
# And there's lots of chatter online, e.g.,
#   http://ubuntu.tech.answers.ninja/post/152403
# but a lot of responses suggest just editing /proc/acpi/wakeup
# which isn't a permanent solution. This script is the permanent
# solution(*). Though [lb] wonders if just making a startup script
# is easier... especially since there's just one user account on
# my laptop.
#
# 2015.01.23: About half the time I open my laptop lid, the computer
#             wakes up, but only half the time. I'm not sure exactly
#             how to reproduce. It seems like if you let is sleep for
#             a long time, opening the lid wakes it up, such that when
#             you're testing sleeping and opening the lid a few seconds
#             or a minute later, the laptop doesn't awake. Whatever,
#             it's pretty good; I wouldn't expect Linux to truly
#             integrate seamlessly with every piece of hardware....

case $1 in

  # Note that these echoes don't actually echo anywhere.

  hibernate)
    echo "33disablewakeups: Suspending to disk."
  ;;

  suspend)
    echo "33disablewakeups: Suspending to RAM."

    # Disable wake on lid open. Peace of mind for those who
    # have biked an hour to work only to find their laptop
    # turned itself on.
    echo "Fixing acpi lid settings."
    # 2016-09-27: THIS IS JUST A TOGGLE! How did it take me so long to realize?
    #   echo " LID" | sudo tee /proc/acpi/wakeup
    cat /proc/acpi/wakeup | grep "^LID" | grep disabled &> /dev/null
    if [[ $? -ne 0 ]]; then
      echo " LID" | sudo tee /proc/acpi/wakeup
    fi
# 2016-09-27: Test that this works. After next reboot...
# another option might be to just set /proc/acpi/wakeup as part of bashrc?

    # Disable USB devices' wake mechanisms.
    # Though USB wake is apparently broken by default as of Kernel 3.2.
    #   http://forum.kodi.tv/showthread.php?tid=121158
    # so I'm just going to leave this here in case future self needs it.
    if false; then
      echo "Fixing acpi USB settings."
      for usb in `cat /proc/acpi/wakeup | grep USB | cut -f1`; do
        state=`cat /proc/acpi/wakeup \
               | grep $usb \
               | cut -f3 \
               | cut -d' ' -f1 \
               | tr -d '*'`
        echo "device = $usb, state = $state"
        if [[ $state == "enabled" ]]; then 
          echo $usb > /proc/acpi/wakeup
        fi
      done
    fi
  ;;

  thaw)
    echo "33disablewakeups: Resuming from disk suspension."
  ;;

  resume)
    echo "33disablewakeups: Resuming from RAM suspension."
  ;;

  *)
    echo "Somebody is calling me totally wrong."
  ;;

esac

