#!/usr/bin/env bash
# vim:tw=0:ts=2:sw=2:et:norl:ft=bash
# Author: Landon Bouma (landonb &#x40; retrosoft &#x2E; com)
# Project: https://github.com/landonb/home-fries#üçü
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# - Copied from a very good article on resizing images for the web:
#
#     https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/
#
# - See also 3 optimizers (not used herein),
#     image_optim, picopt and ImageOptim:
#
#     https://github.com/toy/image_optim
#     https://github.com/ajslater/picopt
#     https://imageoptim.com/mac
#
# - And a long discussion, *ImageMagick v6 Examples -- Resampling Filters*
#
#     https://legacy.imagemagick.org/Usage/filter/

# USAGE: E.g.,
#
#   resize-images '*.JPG' 1200 ../resized-images/

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

resize-images () {
  local INPUT_PATH="$1"
  local OUTPUT_WIDTH="$2"
  local OUTPUT_PATH="$3"

  local IM_UNSHARP
  if ${IM_OPTIMIZED:-false}; then
    # - With optimization:
    #  -unsharp 0.25x0.08+8.3+0.045
    IM_UNSHARP='0.25x0.08+8.3+0.045'
  else
    #  -unsharp 0.25x0.25+8+0.065
    IM_UNSHARP='0.25x0.25+8+0.065'
  fi

  mogrify \
    -path "${OUTPUT_PATH}" \
    -filter Triangle \
    -define filter:support=2 \
    -thumbnail ${OUTPUT_WIDTH} \
    -unsharp ${IM_UNSHARP} \
    -dither None \
    -posterize 136 \
    -quality 82 \
    -define jpeg:fancy-upsampling=off \
    -define png:compression-filter=5 \
    -define png:compression-level=9 \
    -define png:compression-strategy=1 \
    -define png:exclude-chunk=all \
    -interlace none \
    -colorspace sRGB \
    -strip \
    ${INPUT_PATH}
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Run the function if being executed.
# Otherwise being sourced, so do not.
if ! $(printf %s "$0" | grep -q -E '(^-?|\/)(ba|da|fi|z)?sh$' -); then
  resize-images "$@"
fi

