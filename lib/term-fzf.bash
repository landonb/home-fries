#!/usr/bin/env bash
# vim:tw=0:ts=2:sw=2:et:norl:ft=sh
# Author: Landon Bouma (landonb &#x40; retrosoft &#x2E; com)
# Project: https://github.com/landonb/home-fries#🍟
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# 2020-02-06: Parts generated by git@github.com:junegunn/fzf.git:install
#             then refactored into functions and commented by (lb).

main () {
  # Pre-cleanup.
  unset -f main

  # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

  # (lb): Custom path resolution.
  # - The fzf/install uses /usr/local.
  # - We can also check first and honor $(brew prefix).
  # - And let's prefer source checkout, very first. Look for the path
  #   used by the (my) Waffle Batter project (which models my DEV env.).
  fzf_base_path () {
    local system_prefix="$(fzf_usr_local_path)"

    for try_path in \
      "${DOPP_KIT:-${HOME}/.kit}/golang/fzf" \
      "${system_prefix}/opt/fzf" \
    ; do
      if [ -d "${try_path}" ]; then
        echo "${try_path}"
        return
      fi
    done

    echo ""
  }

  fzf_usr_local_path () {
    if command -v brew > /dev/null; then
      brew --prefix
    else
      echo "/usr/local"
    fi
  }

  # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

  # Global variable and Guard clause.
  local fzf_path="$(fzf_base_path)"
  [ -d "${fzf_path}" ] || return

  # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

  # These three operations are copied from fzf/install's ~/.fzf.bash
  # but I replaced hard coded paths with the more versatile fzf_path.

  # Setup fzf
  # ---------
  fzf_update_path () {
    if [[ ! "$PATH" == *${fzf_path}/bin* ]]; then
      # (lb): FZF defaults to after PATH, but put before,
      # so that local source found before /usr/local/bin.
      #  export PATH="${PATH:+${PATH}:}${fzf_path}/bin"
      export PATH="${fzf_path}/bin${PATH:+:${PATH}}"
    fi
  }

  # Auto-completion
  # ---------------
  fzf_wire_completion () {
    [[ $- == *i* ]] && . "${fzf_path}/shell/completion.bash" 2> /dev/null
  }

  # Key bindings
  # ------------
  fzf_wire_key_bindings () {
    . "${fzf_path}/shell/key-bindings.bash"
  }

  # 2021-01-21: Next is an old comment about installing on Linux.
  # - Today I ran fzf/install on macOS, after first `brew install fzf`,
  #   but I'm not sure fzf/install is necessary, or if it just creates
  #   ~/.fzf.bash, which is essentially what this file is.
  #
  # [Comment Circa 2020-02-12:]
  # - (lb): To migrate to Zoidy Pooh Ansible task, I either need
  #         to call fzf/install, or I need to go-get-install it.
  #         Because the install script is interactive,
  #         and appends the next three blocks to ~/.bashrc
  #         ... which I've since wrapped in functions.
  #
  #         - 2021-01-21: But note `brew install fzf` is not interactive.
  #                       It just doesn't run fzf/install for you.

  # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

  # LEARNING!/2020-02-12: The `fd` command is new to me.
  # - Here's a crash course, courtesy junegunn:
  #   https://github.com/junegunn/fzf#respecting-gitignore
  #
  #     # Feed the output of fd into fzf
  #     fd --type f | fzf
  #
  #     # Setting fd as the default source for fzf
  #     export FZF_DEFAULT_COMMAND='fd --type f'
  #
  #     # Now fzf (w/o pipe) will use fd instead of find
  #     fzf
  #
  #     # To apply the command to CTRL-T as well
  #     export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  #
  #     # If you want the command to follow symbolic links, and don't
  #     # want it to exclude hidden files, use the following command:
  #
  #     export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  fzf_wire_default_cmd_fd () {
    command -v fd > /dev/null || return
    # (lb): Let's go with the suggested command, sounds about right to me!
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
  }

  # +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

  fzf_wire () {
    fzf_update_path
    fzf_wire_completion
    fzf_wire_key_bindings
    fzf_wire_default_cmd_fd
  }

  # ***

  # 2021-01-21: Guess I'm wrong: I thought outer enclosure would contain
  # functions, but I'm mistaked, they still pollute my shell.
  # So be deliberate, I suppose.

  fzf_unset_fs () {
    unset -f fzf_base_path
    unset -f fzf_usr_local_path

    unset -f fzf_update_path
    unset -f fzf_wire_completion
    unset -f fzf_wire_key_bindings
    unset -f fzf_wire_default_cmd_fd

    unset -f fzf_wire
    unset -f fzf_unset_fs
  }

  # ***

  fzf_wire

  fzf_unset_fs
}

# ***

main "$@"

